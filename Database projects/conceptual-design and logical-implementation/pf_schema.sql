--group name: A01_GROUP007
--group members: JIng Zeng , shruthi shashidhara shastry, shabarish sai subramanian
-- Capture run of script in file called pf_schema_output.txt
set echo on
SPOOL pf_schema_output.txt

-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-09-13 10:50:33 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



DROP TABLE clinic CASCADE CONSTRAINTS;

DROP TABLE drug CASCADE CONSTRAINTS;

DROP TABLE follow_up_visit CASCADE CONSTRAINTS;

DROP TABLE owner CASCADE CONSTRAINTS;

DROP TABLE participant CASCADE CONSTRAINTS;

DROP TABLE pet CASCADE CONSTRAINTS;

DROP TABLE pet_type CASCADE CONSTRAINTS;

DROP TABLE prescription CASCADE CONSTRAINTS;

DROP TABLE service CASCADE CONSTRAINTS;

DROP TABLE service_charge CASCADE CONSTRAINTS;

DROP TABLE specialisation CASCADE CONSTRAINTS;

DROP TABLE training CASCADE CONSTRAINTS;

DROP TABLE vet CASCADE CONSTRAINTS;

DROP TABLE visit CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE clinic (
    clinic_id       NUMBER(7) NOT NULL,
    clinic_name     VARCHAR2(15) NOT NULL,
    clinic_address  VARCHAR2(50) NOT NULL,
    clinic_phone_no CHAR(10) NOT NULL,
    vet_id          NUMBER(7) NOT NULL
);

COMMENT ON COLUMN clinic.clinic_id IS
    'clinic id as PK';

COMMENT ON COLUMN clinic.clinic_name IS
    'clinic name';

COMMENT ON COLUMN clinic.clinic_address IS
    'clinic address';

COMMENT ON COLUMN clinic.clinic_phone_no IS
    'clinic phone number';

COMMENT ON COLUMN clinic.vet_id IS
    'vet id as PK';

CREATE UNIQUE INDEX clinic__idx ON
    clinic (
        vet_id
    ASC );

ALTER TABLE clinic ADD CONSTRAINT clinic_pk PRIMARY KEY ( clinic_id );

CREATE TABLE drug (
    drug_id       NUMBER(7) NOT NULL,
    drug_name     VARCHAR2(20) NOT NULL,
    drug_usage    VARCHAR2(15) NOT NULL,
    drug_std_cost NUMBER(5, 2) NOT NULL
);

COMMENT ON COLUMN drug.drug_id IS
    'Adding drug id as pk';

COMMENT ON COLUMN drug.drug_name IS
    'Adding drug name';

COMMENT ON COLUMN drug.drug_usage IS
    'Adding drug usage';

COMMENT ON COLUMN drug.drug_std_cost IS
    'drug standard price';

ALTER TABLE drug ADD CONSTRAINT drug_pk PRIMARY KEY ( drug_id );

CREATE TABLE follow_up_visit (
    visit_id           NUMBER(7) NOT NULL,
    follow_up_visit_id NUMBER(7) NOT NULL
);

COMMENT ON COLUMN follow_up_visit.visit_id IS
    'visit id as PK';

COMMENT ON COLUMN follow_up_visit.follow_up_visit_id IS
    'visit id as PK';

ALTER TABLE follow_up_visit ADD CONSTRAINT follow_up_visit_pk PRIMARY KEY ( visit_id,
                                                                            follow_up_visit_id
                                                                            );

CREATE TABLE owner (
    owner_id       NUMBER(7) NOT NULL,
    owner_gname    VARCHAR2(15),
    owner_fname    VARCHAR2(15),
    owner_phone_no CHAR(10) NOT NULL
);

COMMENT ON COLUMN owner.owner_id IS
    'owner id as PK';

COMMENT ON COLUMN owner.owner_gname IS
    'owner given name';

COMMENT ON COLUMN owner.owner_fname IS
    'owner family name';

COMMENT ON COLUMN owner.owner_phone_no IS
    'owner phone number';

ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

CREATE TABLE participant (
    training_id              NUMBER(7) NOT NULL,
    vet_id                   NUMBER(7) NOT NULL,
    part_training_complete   CHAR(1) NOT NULL,
    part_training_expirydate DATE
);

ALTER TABLE participant
    ADD CONSTRAINT part_training_complete_chk CHECK ( part_training_complete IN ( 'N'
    , 'Y' ) );

COMMENT ON COLUMN participant.training_id IS
    'training id as PK';

COMMENT ON COLUMN participant.vet_id IS
    'vet id as PK';

COMMENT ON COLUMN participant.part_training_complete IS
    'participant complete training or not (y or n)';

COMMENT ON COLUMN participant.part_training_expirydate IS
    'expiry date of training';

ALTER TABLE participant ADD CONSTRAINT participant_pk PRIMARY KEY ( vet_id,
                                                                    training_id );

CREATE TABLE pet (
    pet_id         NUMBER(7) NOT NULL,
    pet_name       VARCHAR2(10) NOT NULL,
    pet_birth_year DATE NOT NULL,
    pet_alive      CHAR(1) NOT NULL,
    owner_id       NUMBER(7) NOT NULL,
    pet_type_id    NUMBER(7) NOT NULL
);

ALTER TABLE pet
    ADD CONSTRAINT pet_alive_chk CHECK ( pet_alive IN ( 'N', 'Y' ) );

COMMENT ON COLUMN pet.pet_id IS
    'pet id as PK';

COMMENT ON COLUMN pet.pet_name IS
    'pet name';

COMMENT ON COLUMN pet.pet_birth_year IS
    'pet birth year';

COMMENT ON COLUMN pet.pet_alive IS
    'pet alive';

COMMENT ON COLUMN pet.owner_id IS
    'owner id as PK';

COMMENT ON COLUMN pet.pet_type_id IS
    'animal type id as PK';

ALTER TABLE pet ADD CONSTRAINT pet_pk PRIMARY KEY ( pet_id );

CREATE TABLE pet_type (
    pet_type_id   NUMBER(7) NOT NULL,
    pet_type_name VARCHAR2(10) NOT NULL
);

COMMENT ON COLUMN pet_type.pet_type_id IS
    'animal type id as PK';

COMMENT ON COLUMN pet_type.pet_type_name IS
    'animal type name ';

ALTER TABLE pet_type ADD CONSTRAINT type_pk PRIMARY KEY ( pet_type_id );

ALTER TABLE pet_type ADD CONSTRAINT pettypeunique UNIQUE ( pet_type_name );

CREATE TABLE prescription (
    drug_id           NUMBER(7) NOT NULL,
    visit_id          NUMBER(7) NOT NULL,
    drug_qty_supplied NUMBER(2) NOT NULL,
    drug_line_cost    NUMBER(6, 2) NOT NULL,
    presc_drug_dose   VARCHAR2(10) NOT NULL,
    presc_drug_freq   VARCHAR2(15) NOT NULL
);

COMMENT ON COLUMN prescription.drug_id IS
    'Adding drug id as pk';

COMMENT ON COLUMN prescription.visit_id IS
    'visit id as PK';

COMMENT ON COLUMN prescription.drug_qty_supplied IS
    'Adding drug quantity supplied';

COMMENT ON COLUMN prescription.drug_line_cost IS
    'Adding drug line cost';

COMMENT ON COLUMN prescription.presc_drug_dose IS
    'prescription drug dose';

COMMENT ON COLUMN prescription.presc_drug_freq IS
    'prescribed drug frequency';

ALTER TABLE prescription ADD CONSTRAINT prescription_pk PRIMARY KEY ( visit_id,
                                                                      drug_id );

CREATE TABLE service (
    service_code     CHAR(5) NOT NULL,
    service_std_cost NUMBER(5, 2) NOT NULL,
    service_desc     VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN service.service_code IS
    'Adding service code';

COMMENT ON COLUMN service.service_std_cost IS
    'service standard cost';

COMMENT ON COLUMN service.service_desc IS
    'service description';

ALTER TABLE service ADD CONSTRAINT service_pk PRIMARY KEY ( service_code );

CREATE TABLE service_charge (
    visit_id          NUMBER(7) NOT NULL,
    service_code      CHAR(5) NOT NULL,
    service_line_cost NUMBER(6, 2) NOT NULL
);

COMMENT ON COLUMN service_charge.visit_id IS
    'visit id as PK';

COMMENT ON COLUMN service_charge.service_code IS
    'Adding service code';

COMMENT ON COLUMN service_charge.service_line_cost IS
    'Adding service line cost';

ALTER TABLE service_charge ADD CONSTRAINT visit_service_pk PRIMARY KEY ( visit_id,
                                                                         service_code
                                                                         );

CREATE TABLE specialisation (
    specialisation_id   NUMBER(7) NOT NULL,
    specialisation_name VARCHAR2(15) NOT NULL
);

COMMENT ON COLUMN specialisation.specialisation_id IS
    'specialisation id as PK';

COMMENT ON COLUMN specialisation.specialisation_name IS
    'specialisation name';

ALTER TABLE specialisation ADD CONSTRAINT specialisation_pk PRIMARY KEY ( specialisation_id
);

ALTER TABLE specialisation ADD CONSTRAINT specialisationunique UNIQUE ( specialisation_name
);

CREATE TABLE training (
    training_id       NUMBER(7) NOT NULL,
    training_datetime DATE NOT NULL,
    vet_id            NUMBER(7) NOT NULL,
    training_name     VARCHAR2(15) NOT NULL,
    training_duration VARCHAR2(10) NOT NULL,
    clinic_id         NUMBER(7) NOT NULL
);

COMMENT ON COLUMN training.training_id IS
    'training id as PK';

COMMENT ON COLUMN training.training_datetime IS
    'training date time ';

COMMENT ON COLUMN training.vet_id IS
    'vet id as PK';

COMMENT ON COLUMN training.training_name IS
    'training name';

COMMENT ON COLUMN training.training_duration IS
    'training duration';

COMMENT ON COLUMN training.clinic_id IS
    'clinic id as PK';

ALTER TABLE training ADD CONSTRAINT training_pk PRIMARY KEY ( training_id );

ALTER TABLE training ADD CONSTRAINT trainingunique UNIQUE ( training_datetime,
                                                            vet_id );

CREATE TABLE vet (
    vet_id            NUMBER(7) NOT NULL,
    vet_gname         VARCHAR2(15),
    vet_fname         VARCHAR2(15),
    vet_phone_no      CHAR(10) NOT NULL,
    vet_employ_date   DATE NOT NULL,
    clinic_id         NUMBER(7) NOT NULL,
    specialisation_id NUMBER(7)
);

COMMENT ON COLUMN vet.vet_id IS
    'vet id as PK';

COMMENT ON COLUMN vet.vet_gname IS
    'vet given name';

COMMENT ON COLUMN vet.vet_fname IS
    'vet family name';

COMMENT ON COLUMN vet.vet_phone_no IS
    'vet phone number';

COMMENT ON COLUMN vet.vet_employ_date IS
    'vet employment date';

COMMENT ON COLUMN vet.clinic_id IS
    'clinic id as PK';

COMMENT ON COLUMN vet.specialisation_id IS
    'specialisation id as PK';

ALTER TABLE vet ADD CONSTRAINT vet_pk PRIMARY KEY ( vet_id );

CREATE TABLE visit (
    visit_id           NUMBER(7) NOT NULL,
    visit_date_time    DATE NOT NULL,
    vet_id             NUMBER(7) NOT NULL,
    pet_id             NUMBER(7) NOT NULL,
    clinic_id          NUMBER(7) NOT NULL,
    visit_weight       NUMBER(3) NOT NULL,
    visit_length       VARCHAR2(10) NOT NULL,
    visit_note         VARCHAR2(30) NOT NULL,
    visit_paid_by      CHAR(1) NOT NULL,
    visit_total_amount NUMBER(6, 2) NOT NULL
);

ALTER TABLE visit
    ADD CONSTRAINT paid_by_chk CHECK ( visit_paid_by IN ( 'C', 'E' ) );

COMMENT ON COLUMN visit.visit_id IS
    'visit id as PK';

COMMENT ON COLUMN visit.visit_date_time IS
    'visit date time as PK';

COMMENT ON COLUMN visit.vet_id IS
    'vet id as PK';

COMMENT ON COLUMN visit.pet_id IS
    'pet id as PK';

COMMENT ON COLUMN visit.clinic_id IS
    'clinic id as PK';

COMMENT ON COLUMN visit.visit_weight IS
    'visit_weight';

COMMENT ON COLUMN visit.visit_length IS
    'visit length';

COMMENT ON COLUMN visit.visit_note IS
    'visit note ';

COMMENT ON COLUMN visit.visit_paid_by IS
    'visit charges paid by';

COMMENT ON COLUMN visit.visit_total_amount IS
    'visit total amount';

ALTER TABLE visit ADD CONSTRAINT visit_pk PRIMARY KEY ( visit_id );

ALTER TABLE visit ADD CONSTRAINT visitunique UNIQUE ( visit_date_time,
                                                      vet_id );

ALTER TABLE training
    ADD CONSTRAINT clinic_training FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE vet
    ADD CONSTRAINT clinic_vet FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE visit
    ADD CONSTRAINT clinic_visit_relationship FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE prescription
    ADD CONSTRAINT drug_prescription FOREIGN KEY ( drug_id )
        REFERENCES drug ( drug_id );

ALTER TABLE pet
    ADD CONSTRAINT owner_pet_relationship FOREIGN KEY ( owner_id )
        REFERENCES owner ( owner_id );

ALTER TABLE visit
    ADD CONSTRAINT pet_visit_relationship FOREIGN KEY ( pet_id )
        REFERENCES pet ( pet_id );

ALTER TABLE pet
    ADD CONSTRAINT pettype_pet FOREIGN KEY ( pet_type_id )
        REFERENCES pet_type ( pet_type_id );

ALTER TABLE service_charge
    ADD CONSTRAINT service_to_servicecharge FOREIGN KEY ( service_code )
        REFERENCES service ( service_code );

ALTER TABLE service_charge
    ADD CONSTRAINT servicecharge_visit FOREIGN KEY ( visit_id )
        REFERENCES visit ( visit_id );

ALTER TABLE vet
    ADD CONSTRAINT specialisation_vet FOREIGN KEY ( specialisation_id )
        REFERENCES specialisation ( specialisation_id );

ALTER TABLE participant
    ADD CONSTRAINT training_participant FOREIGN KEY ( training_id )
        REFERENCES training ( training_id );

ALTER TABLE clinic
    ADD CONSTRAINT vet_clinic FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE participant
    ADD CONSTRAINT vet_participant FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE training
    ADD CONSTRAINT vet_training FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE visit
    ADD CONSTRAINT vet_visit_relationship FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE prescription
    ADD CONSTRAINT visit_prescription FOREIGN KEY ( visit_id )
        REFERENCES visit ( visit_id );

ALTER TABLE follow_up_visit
    ADD CONSTRAINT visit_to_follow_up FOREIGN KEY ( follow_up_visit_id )
        REFERENCES visit ( visit_id );

ALTER TABLE follow_up_visit
    ADD CONSTRAINT visit_to_follow_upv2 FOREIGN KEY ( visit_id )
        REFERENCES visit ( visit_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            14
-- CREATE INDEX                             1
-- ALTER TABLE                             39
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

SPOOL off
set echo off